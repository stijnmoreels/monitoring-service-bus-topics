{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"Alert.Name": {
			"type": "String"
		},
		"ServiceBus.Namespace.Name": {
			"type": "String"
		},
		"ServiceBus.Topic.Name": {
			"type": "String"
		},
		"ServiceBus.Subscription.Name": {
			"type": "String"
		},
		"ServiceBus.Subscription.Filter.Name": {
			"type": "String",
			"defaultValue": "message-type-filter"
		},
		"ServiceBus.Subscription.Filter.Expression": {
			"type": "String",
			"defaultValue": "MessageType = 'OrdersV1' OR MessageType = 'ShipmentV1'"
		}
	},
	"variables": {
		"ServiceBus.Queue.Name": "[concat('deadletter-', parameters('ServiceBus.Topic.Name'), '-', parameters('ServiceBus.Subscription.Name'))]"
	},
	"resources": [
		{
			"type": "Microsoft.ServiceBus/namespaces",
			"apiVersion": "2018-01-01-preview",
			"name": "[parameters('ServiceBus.Namespace.Name')]",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"zoneRedundant": false
			}
		},
		{
			"type": "Microsoft.ServiceBus/namespaces/queues",
			"apiVersion": "2017-04-01",
			"name": "[concat(parameters('ServiceBus.Namespace.Name'), '/', variables('ServiceBus.Queue.Name'))]",
			"location": "[resourceGroup().location]",
			"properties": {
				"maxDeliveryCount": 10,
				"enablePartitioning": false
			},
			"dependsOn": [
				"[resourceId('Microsoft.ServiceBus/namespaces', parameters('ServiceBus.Namespace.Name'))]"
			]
		},
		{
			"type": "Microsoft.ServiceBus/namespaces/topics",
			"apiVersion": "2017-04-01",
			"name": "[concat(parameters('ServiceBus.Namespace.Name'), '/', parameters('ServiceBus.Topic.Name'))]",
			"location": "[resourceGroup().location]",
			"properties": {
			},
			"dependsOn": [
				"[resourceId('Microsoft.ServiceBus/namespaces', parameters('ServiceBus.Namespace.Name'))]"
			]
		},
		{
			"type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
			"apiVersion": "2017-04-01",
			"name": "[concat(parameters('ServiceBus.Namespace.Name'), '/', parameters('ServiceBus.Topic.Name'), '/', parameters('ServiceBus.Subscription.Name'))]",
			"location": "[resourceGroup().location]",
			"properties": {
				"maxDeliveryCount": 3,
				"forwardDeadLetteredMessagesTo": "[variables('ServiceBus.Queue.Name')]"
			},
			"dependsOn": [
				"[resourceId('Microsoft.ServiceBus/namespaces/queues', parameters('ServiceBus.Namespace.Name'), variables('ServiceBus.Queue.Name'))]",
				"[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('ServiceBus.Namespace.Name'), parameters('ServiceBus.Topic.Name'))]"
			]
		},
		{
			"type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
			"apiVersion": "2017-04-01",
			"name": "[concat(parameters('ServiceBus.Namespace.Name'), '/', parameters('ServiceBus.Topic.Name'), '/', parameters('ServiceBus.Subscription.Name'), '/', parameters('ServiceBus.Subscription.Filter.Name'))]",
			"location": "[resourceGroup().location]",
			"properties": {
				"action": {},
				"filterType": "SqlFilter",
				"sqlFilter": {
					"sqlExpression": "[parameters('ServiceBus.Subscription.Filter.Expression')]",
					"compatibilityLevel": 20
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('ServiceBus.Namespace.Name'), parameters('ServiceBus.Topic.Name'), parameters('ServiceBus.Subscription.Name'))]"
			]
		},
		{
			"type": "microsoft.insights/metricAlerts",
			"apiVersion": "2018-03-01",
			"name": "[parameters('Alert.Name')]",
			"location": "global",
			"properties": {
				"description": "[concat('Alert triggered when messages are being deadlettered for the ', parameters('ServiceBus.Subscription.Name'), ' subscription on the ', parameters('ServiceBus.Topic.Name'), ' topic.')]",
				"severity": 2,
				"enabled": true,
				"scopes": [
					"[resourceId('Microsoft.ServiceBus/namespaces', parameters('ServiceBus.Namespace.Name'))]"
				],
				"evaluationFrequency": "PT1M",
				"windowSize": "PT5M",
				"criteria": {
					"allOf": [
						{
							"threshold": 1,
							"name": "Metric1",
							"metricNamespace": "Microsoft.ServiceBus/namespaces",
							"metricName": "ActiveMessages",
							"dimensions": [
								{
									"name": "EntityName",
									"operator": "Include",
									"values": [
										"[variables('ServiceBus.Queue.Name')]"
									]
								}
							],
							"operator": "GreaterThanOrEqual",
							"timeAggregation": "Average",
							"criterionType": "StaticThresholdCriterion"
						}
					],
					"odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
				},
				"autoMitigate": true,
				"targetResourceType": "Microsoft.ServiceBus/namespaces",
				"actions": []
			},
			"dependsOn": [
				"[resourceId('Microsoft.ServiceBus/namespaces/queues', parameters('ServiceBus.Namespace.Name'), variables('ServiceBus.Queue.Name'))]"
			]
		}
	]
}