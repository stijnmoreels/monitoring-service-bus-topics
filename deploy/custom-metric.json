{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"Alert.Name": {
			"defaultValue": "Deadlettered Order Messages",
			"type": "String"
		},
		"ApplicationInsights.Name": {
			"type": "String"
		},
		"AzureFunction.Name": {
			"type": "String"
		},
		"AzureFunction.Plan.Consumption.Name": {
			"type": "String"
		},
		"ServiceBus.Namespace.Name": {
			"type": "String"
		},
		"ServiceBus.Topic.Name": {
			"type": "String"
		},
		"ServiceBus.Subscription.Name": {
			"type": "String"
		},
		"ServiceBus.Subscription.Filter.Name": {
			"type": "String"
		},
		"ServiceBus.Subscription.Filter.Expression": {
			"type": "String",
			"defaultValue": "MessageType = 'OrdersV1' OR MessageType = 'ShipmentV1'"
		},
		"StorageAccount.Name": {
			"type": "String"
		}
	},
	"variables": {
		"ServiceBus.Queue.Name": "[concat('deadletter-', parameters('ServiceBus.Topic.Name'), '-', parameters('ServiceBus.Subscription.Name'))]"
	},
	"resources": [{
			"type": "microsoft.insights/components",
			"apiVersion": "2018-05-01-preview",
			"name": "[parameters('ApplicationInsights.Name')]",
			"location": "westeurope",
			"kind": "web",
			"properties": {
				"Application_Type": "web",
				"RetentionInDays": 30
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2020-08-01-preview",
			"name": "[parameters('StorageAccount.Name')]",
			"location": "westeurope",
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"kind": "Storage",
			"properties": {
				"networkAcls": {
					"bypass": "AzureServices",
					"virtualNetworkRules": [],
					"ipRules": [],
					"defaultAction": "Allow"
				},
				"supportsHttpsTrafficOnly": true,
				"encryption": {
					"services": {
						"file": {
							"keyType": "Account",
							"enabled": true
						},
						"blob": {
							"keyType": "Account",
							"enabled": true
						}
					},
					"keySource": "Microsoft.Storage"
				}
			}
		},
		{
			"type": "microsoft.insights/metricalerts",
			"apiVersion": "2018-03-01",
			"name": "[parameters('Alert.Name')]",
			"location": "global",
			"dependsOn": [
				"[resourceId('microsoft.insights/components', parameters('ApplicationInsights.Name'))]"
			],
			"properties": {
				"description": "[concat('Alert triggered when messages are being deadlettered for the ', parameters('ServiceBus.Subscription.Name'), ' subscription on the ', parameters('ServiceBus.Topic.Name'), ' topic for OrdersV1 message type.')]",
				"severity": 2,
				"enabled": true,
				"scopes": [
					"[resourceId('microsoft.insights/components', parameters('ApplicationInsights.Name'))]"
				],
				"evaluationFrequency": "PT1M",
				"windowSize": "PT5M",
				"criteria": {
					"allOf": [{
						"threshold": 1,
						"name": "Metric1",
						"metricNamespace": "Azure.ApplicationInsights",
						"metricName": "Deadlettered Messages (OrdersV1)",
						"operator": "GreaterThanOrEqual",
						"timeAggregation": "Count",
						"criterionType": "StaticThresholdCriterion"
					}],
					"odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
				},
				"autoMitigate": true,
				"targetResourceType": "microsoft.insights/components",
				"actions": []
			}
		},
		{
			"type": "Microsoft.ServiceBus/namespaces",
			"apiVersion": "2018-01-01-preview",
			"name": "[parameters('ServiceBus.Namespace.Name')]",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "Standard"
			},
			"properties": {
				"zoneRedundant": false
			}
		},
		{
			"type": "Microsoft.ServiceBus/namespaces/queues",
			"apiVersion": "2017-04-01",
			"name": "[concat(parameters('ServiceBus.Namespace.Name'), '/', variables('ServiceBus.Queue.Name'))]",
			"location": "[resourceGroup().location]",
			"properties": {
				"maxDeliveryCount": 10,
				"enablePartitioning": false
			},
			"dependsOn": [
				"[resourceId('Microsoft.ServiceBus/namespaces', parameters('ServiceBus.Namespace.Name'))]"
			]
		},
		{
			"type": "Microsoft.ServiceBus/namespaces/topics",
			"apiVersion": "2017-04-01",
			"name": "[concat(parameters('ServiceBus.Namespace.Name'), '/', parameters('ServiceBus.Topic.Name'))]",
			"location": "[resourceGroup().location]",
			"properties": {},
			"dependsOn": [
				"[resourceId('Microsoft.ServiceBus/namespaces', parameters('ServiceBus.Namespace.Name'))]"
			]
		},
		{
			"type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
			"apiVersion": "2017-04-01",
			"name": "[concat(parameters('ServiceBus.Namespace.Name'), '/', parameters('ServiceBus.Topic.Name'), '/', parameters('ServiceBus.Subscription.Name'))]",
			"location": "[resourceGroup().location]",
			"properties": {
				"maxDeliveryCount": 3
			},
			"dependsOn": [
				"[resourceId('Microsoft.ServiceBus/namespaces/queues', parameters('ServiceBus.Namespace.Name'), variables('ServiceBus.Queue.Name'))]",
				"[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('ServiceBus.Namespace.Name'), parameters('ServiceBus.Topic.Name'))]"
			]
		},
		{
			"type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
			"apiVersion": "2017-04-01",
			"name": "[concat(parameters('ServiceBus.Namespace.Name'), '/', parameters('ServiceBus.Topic.Name'), '/', parameters('ServiceBus.Subscription.Name'), '/', parameters('ServiceBus.Subscription.Filter.Name'))]",
			"location": "[resourceGroup().location]",
			"properties": {
				"action": {},
				"filterType": "SqlFilter",
				"sqlFilter": {
					"sqlExpression": "[parameters('ServiceBus.Subscription.Filter.Expression')]",
					"compatibilityLevel": 20
				}
			},
			"dependsOn": [
				"[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('ServiceBus.Namespace.Name'), parameters('ServiceBus.Topic.Name'), parameters('ServiceBus.Subscription.Name'))]"
			]
		},
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2018-02-01",
			"name": "[parameters('AzureFunction.Plan.Consumption.Name')]",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "Y1",
				"tier": "Dynamic",
				"size": "Y1",
				"family": "Y",
				"capacity": 0
			},
			"kind": "functionapp",
			"properties": {
				"perSiteScaling": false,
				"maximumElasticWorkerCount": 1,
				"isSpot": false,
				"reserved": true,
				"isXenon": false,
				"hyperV": false,
				"targetWorkerCount": 0,
				"targetWorkerSizeId": 0
			}
		},
		{
			"type": "Microsoft.Web/sites",
			"apiVersion": "2018-11-01",
			"name": "[parameters('AzureFunction.Name')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms', parameters('AzureFunction.Plan.Consumption.Name'))]"
			],
			"kind": "functionapp,linux",
			"properties": {
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('AzureFunction.Plan.Consumption.Name'))]",
				"reserved": true,
				"siteConfig": {
					"appSettings": [{
							"name": "AzureWebJobsStorage",
							"value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('StorageAccount.Name'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount.Name')), '2019-06-01').keys[0].value)]"
						},
						{
							"name": "APPINSIGHTS_INSTRUMENTATIONKEY",
							"value": "[reference(resourceId('microsoft.insights/components', parameters('ApplicationInsights.Name')), '2020-02-02-preview').InstrumentationKey]"
						},
						{
							"name": "FUNCTIONS_EXTENSION_VERSION",
							"value": "~3"
						},
						{
							"name": "FUNCTIONS_WORKER_RUNTIME",
							"value": "dotnet"
						},
						{
							"name": "ServiceBusConnectionString",
							"value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/AuthorizationRules', parameters('ServiceBus.Namespace.Name'),'RootManageSharedAccessKey'),'2015-08-01').primaryConnectionString]"
						},
						{
							"name": "TopicName",
							"value": "[parameters('ServiceBus.Topic.Name')]"
						},
						{
							"name": "SubscriptionName",
							"value": "[parameters('ServiceBus.Subscription.Name')]"
						},
						{
							"name": "DeadletterEntityName",
							"value": "deadletter-events-example-subscription"
						}
					]
				}
			}
		}
	]
}